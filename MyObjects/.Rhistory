stock["Volume_money"] <- as.numeric(stock[,"Close"]) * as.numeric(stock[,"Volume"])
stock["Volume_money"]
head(stock)
tickerSymbol <- data.frame(tickerSymbol = rep(code[i], nrow(stock)))
stock <- cbind(tickerSymbol, stock)
getStockFromKdb <- function(code, year){
stocks <- NULL
for(i in 1:length(code)){
for (j in 1:length(year)){
url <- paste(code[i], "_", year[j], ".csv", sep="")
stock <- read.csv(url, skip = 1, header = T)
colnames(stock) <- c("Date", "Open", "High", "Low", "Close", "Volume", "Volume_money")
stock["Volume_money"] <- as.numeric(stock[,"Close"]) * as.numeric(stock[,"Volume"])
tickerSymbol <- data.frame(tickerSymbol = rep(code[i], nrow(stock)))
stock <- cbind(tickerSymbol, stock)
if(is.null(stocks)){
stocks <- stock
} else {
stocks <- rbind(stocks, stock)
}
if(i < length(code) || j < length(year)){
Sys.sleep(0.5)
}
}
}
return(stocks)
}
res <- getStockFromKdb(c(7201, 7203), c(2017, 2018))
head(res)
View(res)
library(quantmod)
res$tickerSymbol == 7201
nissan <- res[res$tickerSymbol == 7201, -1]
head(nissan)
toyota <- res[res$tickerSymbol == 7203, -1]
read.zoo(nissan)
nissan_xts <- as.xts(read.zoo(nissan))
toyota_xts <- as.xts(read.zoo(toyota))
toyota_xts
class(nissan_xts)
library(quantmod)
nissan_xts
first(nissan_xts)
nissan_xts['2017-1-17']
nissan_xts['2017-11-17']
nissan_xts['2017-1-7']
nissan_xts
toyota_xts
2017:2018
res <- getStockFromKdb(c(7201, 7203), 2017:2018)
View(res)
nissan <- res[res$tickerSymbol == 7201, -1]
toyota <- res[res$tickerSymbol == 7203, -1]
View(toyota)
View(nissan)
nissan_xts <- as.xts(read.zoo(nissan))
toyota_xts <- as.xts(read.zoo(toyota))
View(nissan_xts)
nissan_xts['2017-1-7']
nissan_xts['2017-1-6']
nissan_xts['2017/1/6']
nissan_xts["2017/1/6"]
nissan_xts["2017-1-6"]
nissan_xts["2017-1-7"]
nissan_xts["2017-1-8"]
nissan_xts["2017-01-08"]
nissan_xts["2017-01-06"]
nissan_xts["2017-03"]
nissan_xts["2017-02-01:2017-02-15"]
nissan_xts
nissan_xts["2017-01-06"]
nissan_xts["2017-02-01:2017-02-5"]
nissan_xts["2017-02"]
nissan_xts["2017-02-01:2017-02-05"]
nissan_xts["2017-02-01:2017-02-06"]
nissan_xts["2017-02-01:2017-02-06"]
nissan_xts["2017-02-01:2017-02-02"]
nissan_xts["2017-02-02"]
nissan_xts["2017-02-01::2017-02-02"]
nissan_xts["2017-02-01::2017-02-06"]
nissan_xts["2017-02-01::"]
nissan_xts["2018-08::"]
charSeries(
nissan_xts,
type = "candlestick"
)
chartSeries(
nissan_xts,
type = "candlestick"
)
chartSeries(
nissan_xts,
subset = "2017-7",
type = "candlestick"
)
chartSeries(
nissan_xts,
subset = "2017-7",
type = "candlestick"
)
library(quantmod)
chartSeries(
nissan_xts,
subset = "2017-7",
type = "candlestick"
)
chartSeries(
nissan_xts,
subset = "2017-7::",
type = "candlestick"
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick"
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green')
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green')"
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green')"
)
last(nissan_xts)
chartSeries(
toyota_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green')"
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green'); addVo()"
)
chartSeries(
nissan_xts,
subset = "2018-7::",
type = "candlestick",
TA = "addSMA(n=25, col='white'); addSMA(n=75, col='green'); addVo()",
theme = chartTheme('white', up.col='white', up.col='white', dn.col='blue')
)
mean(nissan_xts[2017::])
mean(nissan_xts['2017', 'Close'])
nissan_xts['2017', 'Close']
idx <- index(nissan_xts['2017'])
idx
N <- length(idx)
mean_data <- xts(rep(mean(nissan_xts['2017', 'Close']), N), order.by=idx)
mean_data
chartSeries(nissan_xts, subset=2017)
addTA(mean_data, on=1, lwd=2)
chartSeries(nissan_xts, subset="2017")
addTA(mean_data, on=1, lwd=2)
nissan
#予測の評価
library(forcast)
#予測の評価
library(forecast)
set.seed(1)
white_noise <- ts(norm(n=450, mean=0, sd=10), start=1)
white_noise <- ts(rnorm(n=450, mean=0, sd=10), start=1)
white_noise
train_wn <- window(white_noise, end=400)
train_wn
test_wn <- window(white_noise, start=401)
#ナイーブ予測
model_wn <- meanf(train_wn, h=50)
model_wn
mean(train_wn)
stdev(train_wn)
std(train_wn)
sd(train_wn)
?dnorm
qnorm(0.8, mean=mean(train_wn), sd=sd(train_wn))
dnorm(0.8, mean=mean(train_wn), sd=sd(train_wn))
pnorm(0.8, mean=mean(train_wn), sd=sd(train_wn))
qnorm(0.8, mean=mean(train_wn), sd=sd(train_wn))
mean(train_wn)
sd(train_wn)
qnorm(0.9, mean=mean(train_wn), sd=sd(train_wn))
model_wn
qnorm(0.9, mean=mean(train_wn), sd=sd(train_wn))
qnorm(0.1, mean=mean(train_wn), sd=sd(train_wn))
qnorm(0.025, mean=mean(train_wn), sd=sd(train_wn))
accuracy(model_wn, test_wn)
plot(model_wn)
lines(white_noise)
#
set.seed(8)
random_walk <- ts(cumsum(rnorm(n=450, mean=0, sd=10), start=1))
random_walk <- ts(cumsum(rnorm(n=450, mean=0, sd=10)), start=1))
random_walk <- ts(cumsum(rnorm(n=450, mean=0, sd=10)), start=1)
train_rw <- window(random_walk, end=400)
test_rw <- window(random_walk, start=401)
moder_rw <- rwf(train_rw, h=50)
moder_rw
#
set.seed(8)
random_walk <- ts(cumsum(rnorm(n=450, mean=0, sd=10)), start=1)
train_rw <- window(random_walk, end=400)
test_rw <- window(random_walk, start=401)
moder_rw <- rwf(train_rw, h=50)
moder_rw
train_rw[-1]
train_rw[400]
moder_rw
model_rw <- rwf(train_rw, h=50)
accuracy(model_rw, test_rw)
model_rw
accuracy(model_rw, test_rw)
model_wn_2 <- meanf(train_rw, h=50)
model_wn_2
mean(train_rw)
model_wn_2
par(mfrow=c(2, 1), mar=c(2.5, 4, 2.5, 4))
plot(model_rw)
lines(random_walk)
plot(model_wn_2)
linew(random_walk)
lines(random_walk)
accuracy(model_rw, test_rw)
accuracy(model_wn_2, test_rw)
#ARIMA
nissan <- getStockFromKdb(c(7201), 2017:2018)
View(nissan)
library(quantmod)
head(nissan)
nissan[, -1]
nissan_xts <- as.xts(read.zoo(nissan[, -1]))
nissan_xts
chartSeries(
nissan_xts,
type="chandlesticks"
)
chartSeries(
nissan_xts,
type="candlesticks"
)
diff(lob(nissan_xts$Close))
diff(log(nissan_xts$Close))
log_diff <- diff(log(nissan_xts$Close))[-1]
log_diff
log_diff["::2017-06-30"]
log_diff
nissan_xts
library(quantmod)
log_diff
log_diff["::2017-06-30"]
log_diff["::2018-06-30"]
train <- log_diff["::2018-06-30"]
test <-  log_diff["2018-7-1::"]
test <-  log_diff["2018-07-01::"]
test
library(forecast)
model_arima <- auto.arima(
train,
ic="aic",
stepwise=F,
max.p=10,
max.q=10,
max.order=20,
parallel=T,
num.cores=4
)
model_arima <- auto.arima(
train,
ic="aic",
stepwise=F,
max.p=10,
max.q=10,
max.order=20,
parallel=T,
num.cores=4
)
train <- log_diff["::2018-06-30"]
test <-  log_diff["2018-07-01::"]
model_arima <- auto.arima(
train,
ic="aic",
stepwise=F,
max.p=10,
max.q=10,
max.order=20,
parallel=T,
num.cores=4
)
model_arima <- auto.arima(
train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20,
parallel=T,
num.cores=4
)
model_arima
toyota <- getStockFromKdb(c(7203), 2017:2018)
toyota_xts <- as.xts(read.zoo(toyota[, -1]))
chartSeries(
toyota_xts,
type="candlesticks"
)
toyota_log_diff <- diff(log(toyota_xts$Close))[-1]
toyota_train <- toyota_log_diff["::2018-06-30"]
toyota_test <-  toyota_log_diff["2018-07-01::"]
model_arima_toyota <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_toyota <- auto.arima(
toyota_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_toyota
nissan_train <- nissan_log_diff["::2017-12-31"]
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20,
parallel=T,
num.cores=4
)
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_nissan
nissan_log_diff <- diff(log(nissan_xts$Close))[-1]
nissan_train <- nissan_log_diff["::2018-06-30"]
nissan_test <-  nissan_log_diff["2018-07-01::"]
toyota_log_diff <- diff(log(toyota_xts$Close))[-1]
toyota_train <- toyota_log_diff["::2018-06-30"]
toyota_test <-  toyota_log_diff["2018-07-01::"]
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_nissan
model_arima_toyota <- auto.arima(
toyota_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_toyota
nissan_train <- nissan_log_diff["::2017-12-31"]
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_nissan
toyota_train <- toyota_log_diff["::2017-12-31"]
toyota_train
library(quantmod)
#予測の評価
library(forecast)
nissan_train <- nissan_log_diff["::2017-12-31"]
toyota_train <- toyota_log_diff["::2017-12-31"]
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_nissan
model_arima_toyota
model_arima_toyota <- auto.arima(
toyota_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_toyota
toyota_train
model_arim
model_arima_nissan <- auto.arima(
nissan_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_nissan
model_arima_toyota
f_arima <- forecast(model_arima_toyota, h=9)
f_rw <- rwf(toyota_train)
f_mean <- meanf(train)
toyota_test <-  toyota_log_diff["2018-01-01::"]
accuracy(f_arima, toyota_test)
f_arima
f_rw
length(test_wn)
toyota_test <-  toyota_log_diff["2018-01-01::"]
toyota_test[1:9]
toyota_test <- toyota_test[1:9]
accuracy(f_arima, toyota_test)
accuracy(f_rw, toyota_test)
accuracy(f_mean, toyota_test)
model_arima_toyota
forecast(model_arima_toyota, h=9)
forecast(model_arima_toyota, h=9)$mean
forecast(model_arima_toyota, h=1)
forecast(model_arima_toyota, h=1)$mean
return(forecast(model, h=1)$mean)
length(toyota_train)
library(quantmod)
library(forecast)
model_arima_toyota <- auto.arima(
toyota_train,
ic="aic",
stepwise=F,
approximation=F,
max.p=10,
max.q=10,
max.order=20
)
model_arima_toyota
length(toyota_train)
f_arima_2 <- rollapply(toyota_log_diff, 245, calcForecast)
#一期先予想
calcForecast <- function(data){
model <- Arima(data, order=c(0, 1, 1))
return(forecast(model, h=1)$mean)
}
f_arima_2 <- rollapply(toyota_log_diff, 245, calcForecast)
f_arima_2
f_arima_2 <- lag(f_arima_2)
f_arima_2
f_arima_2 <- f_arima_2[!is.na(f_arima_2)]
f_arima_2
f_mean_2 <- rollapply(toyota_log_diff, 245, mean)
f_mean_2
f_mean_2 <- lag(f_mean_2)
f_mean_2 <- f_mean_2[!is.na(f_mean_2)]
f_mean_2
f_rw_2 <- toyota_log_diff["2017-12-29::"]
f_rw_2 <- lag(toyota_log_diff["2017-12-29::"])
f_rw_2
toyota_log_diff["2017-12-29::"]
f_rw_2 <- lag(toyota_log_diff["2017-12-29::"])
f_rw_2
f_rw_2 <- f_rw_2[!is.na(f_rw_2)]
length(f_arima_2)
length(f_rw_2)
length(f_mean_2)
first(f_mean_2)
first(f_rw_2)
first(f_arima_2)
accuaracy(as.ts(f_arima_2), test)
accuracy(as.ts(f_arima_2), test)
accuracy(as.ts(f_mean_2), test)
accuracy(as.ts(f_rw_2), test)
plot(toyota_log_diff)
plot(toyota_log_diff["2017-10::"])
lines(f_arima_2, col=2, lwd=2)
lines(f_mean_2, col=4, lwd=2)
lines(f_rw_2, col=5, lwd=2)
